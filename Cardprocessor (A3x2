public class CardProcessor {
    
    public void sortCards( final Card[] cardsToBeSorted ){
        Card[][] unsorted = generateCardMatrix(cardsToBeSorted);
        Card[][] sorted = new Card[4][13];
        int numberOfRows = unsorted.length;
        int numberOfColumns = unsorted[0].length;
        int suit = 0;
        int rank;
        for (int rows = 0; rows < numberOfRows; rows++) {
            for (int column = 0; column < numberOfColumns; column++) {
                if (unsorted[rows][column]!= null) {
                    suit = unsorted[rows][column].getSuit().ordinal();
                    rank = unsorted[rows][column].getRank().ordinal();
                    sorted[suit][rank] = unsorted[rows][column];
                }
            }     
        }
    }//method()
    
    public Card[][] generateCardMatrix( Card[] givencards ){
        Card[][] matrix = new Card[4][13];
        int suitDimension = 0;
        int rankDimension = 0;
        for (int i = 0; i < givencards.length; i++) {
            if (rankDimension == 13) {
                rankDimension = 0;
                suitDimension++;
            }
            matrix [suitDimension][rankDimension] = givencards[i];
        }
        return matrix;
    }
        
}//class
